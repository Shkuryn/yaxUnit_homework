#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт
	ЮТТесты.ДобавитьТестовыйНабор("ПоступлениеСписаниеТоваров")
	.ДобавитьТест("ПриходТовара", "ПриходТовара", "TASK-10, Шкурин Игорь")
	.ДобавитьТест("РасходТовара", "РасходТовара", "TASK-10, Шкурин Игорь")
	.ВТранзакции()	
	;
КонецПроцедуры   

Процедура ПриходТовара() Экспорт
	
	
	// - Создание Документ.ПриходТовара
	ПоступлениеТовара1 = ЮТест.Данные().КонструкторОбъекта("Документ.ПриходТовара")
	.ФикцияОбязательныхПолей() // Автоматически заполняем обязательные поля
	.Установить("Дата", ТекущаяДатаСеанса()) 
	.ФикцияРеквизитов("Поставщик")
	.Установить("Склад", ЮТест.Контекст().Значение("Склад")) 
	.Установить("Валюта", ЮТест.Контекст().Значение("Валюта"))  
	.Установить("Организация", ЮТест.Контекст().Значение("Организация"))  
	.ТабличнаяЧасть("Товары")
	.ДобавитьСтроку()
	.Установить("Товар", ЮТест.Контекст().Значение("ТоварМяч"))  
	.Установить("Цена", 5000) 
	.Установить("Количество", 10) 
	.Установить("Сумма", 50000)
	;              
	
	ПоступлениеТовара2 = ЮТест.Данные().КонструкторОбъекта("Документ.ПриходТовара")
	.ФикцияОбязательныхПолей() // Автоматически заполняем обязательные поля
	.Установить("Дата", ТекущаяДатаСеанса()) 
	.ФикцияРеквизитов("Поставщик")
	.Установить("Склад", ЮТест.Контекст().Значение("Склад")) 
	.Установить("Валюта", ЮТест.Контекст().Значение("Валюта"))  
	.Установить("Организация", ЮТест.Контекст().Значение("Организация"))  
	.ТабличнаяЧасть("Товары")
	.ДобавитьСтроку()
	.Установить("Товар", ЮТест.Контекст().Значение("ТоварШайба"))  
	.Установить("Цена", 3000) 
	.Установить("Количество", 10) 
	.Установить("Сумма", 30000)
	;
	
	// 2. Выполнение функции.
	Приход1 = ПоступлениеТовара1.Провести();
	Приход2 = ПоступлениеТовара2.Провести();
	
	// 3. Проверка результата.
	ЮТест.ОжидаетЧто(Приход1)
	.ИмеетТип("ДокументСсылка.ПриходТовара")
	.Свойство("Проведен").Равно(Истина)
	;  
	
	ЮТест.ОжидаетЧто(Приход2)
	.ИмеетТип("ДокументСсылка.ПриходТовара")
	.Свойство("Проведен").Равно(Истина)
	;
	
КонецПроцедуры

Процедура РасходТовара() Экспорт
	
	// - Создание Справочник.ВидыЦен
	ВидЦеныРозничная = Справочники.ВидыЦен.НайтиПоНаименованию("Розничная");
	Если ВидЦеныРозничная.Пустая() Тогда 
		
		// - Создание Справочник.ВидыЦен
		ВидЦеныСсылка = ЮТест.Данные().КонструкторОбъекта("Справочник.ВидыЦен")
		.ФикцияОбязательныхПолей() // Автоматически заполняем обязательные поля
		.Установить("Наименование", "Розничная")
		.Записать()
		;
		
	КонецЕсли;
	
	// - Создание Документ.РасходТовара
	РасходТовара = ЮТест.Данные().КонструкторОбъекта("Документ.РасходТовара")
	.ФикцияОбязательныхПолей() // Автоматически заполняем обязательные поля
	.Установить("Дата", ТекущаяДатаСеанса()) 
	.ФикцияРеквизитов("Покупатель")
	.Установить("Склад", ЮТест.Контекст().Значение("Склад")) 
	.Установить("Валюта", ЮТест.Контекст().Значение("Валюта"))  
	.Установить("Организация", ЮТест.Контекст().Значение("Организация"))  
	
	.ТабличнаяЧасть("Товары")
	.ДобавитьСтроку()
	.Установить("Товар",  ЮТест.Контекст().Значение("ТоварМяч")) 
	.Установить("Цена", 6000) 
	.Установить("Количество", 10) 
	.Установить("Сумма", 60000)
	.ДобавитьСтроку()
	.Установить("Товар",  ЮТест.Контекст().Значение("ТоварШайба")) 
	.Установить("Цена", 4000) 
	.Установить("Количество", 10) 
	.Установить("Сумма", 40000)
	;
	
	// 2. Выполнение функции.
	Док = РасходТовара.Провести(); 
	
	ОписаниеЗапроса = ЮТЗапросы.ОписаниеЗапроса();
	ОписаниеЗапроса.ИмяТаблицы = "РегистрНакопления.ТоварныеЗапасы.Остатки";
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("Товар");
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("КоличествоОстаток");
	
	ОписаниеЗапроса.Условия.Добавить("Склад = &Склад");  
	ОписаниеЗапроса.Условия.Добавить("Товар в (&Товары)");  
	Товары = Новый Массив;
	Товары.Добавить(ЮТест.Контекст().Значение("ТоварМяч"));
	Товары.Добавить(ЮТест.Контекст().Значение("ТоварШайба"));
	
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Товары", Товары);
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Склад", ЮТест.Контекст().Значение("Склад"));
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Период", ТекущаяДатаСеанса());
	
	Результат = ЮТЗапросы.РезультатЗапроса(ОписаниеЗапроса);
	
	// Проверка свойств документа
	ЮТест.ОжидаетЧто(Док)
	.ИмеетТип("ДокументСсылка.РасходТовара")
	.Свойство("Проведен").Равно(Истина);
	
	// Проверка, что результат запроса пустой
	ЮТест.ОжидаетЧто(ЮТЗапросы.РезультатПустой(ОписаниеЗапроса))
	.ЭтоИстина();
	
КонецПроцедуры

Процедура ПередТестовымНабором() Экспорт   
	
	ТоварМяч = ЮТест.Данные().КонструкторОбъекта("Справочник.Товары")
	.ФикцияОбязательныхПолей()
	.Установить("Наименование", "Футбольный мяч")
	.Записать();
	ЮТест.Контекст().УстановитьЗначение("ТоварМяч", ТоварМяч); 
	
	ТоварШайба = ЮТест.Данные().КонструкторОбъекта("Справочник.Товары")
	.ФикцияОбязательныхПолей()
	.Установить("Наименование", "Шайба")
	.Записать();
	ЮТест.Контекст().УстановитьЗначение("ТоварШайба", ТоварШайба);
	
	ГруппаСпортТовары = ЮТест.Данные().КонструкторОбъекта("Справочник.Товары")
	.ФикцияОбязательныхПолей()
	.Установить("ЭтоГруппа", Истина)
	.Установить("Наименование", "Спорттовары")
	.Записать();
	ЮТест.Контекст().УстановитьЗначение("ГруппаСпортТовары", ГруппаСпортТовары); 
	
	Склад = ЮТест.Данные().КонструкторОбъекта("Справочник.Склады")
	.ФикцияОбязательныхПолей()
	.Установить("Наименование", "Основной склад")
	.Записать();
	ЮТест.Контекст().УстановитьЗначение("Склад", Склад); 
	
	Валюта = ЮТест.Данные().КонструкторОбъекта("Справочник.Валюты")
	.ФикцияОбязательныхПолей()
	.Установить("НаименованиеОсновнойВалюты", "рубль")
	.Установить("НаименованиеРазменнойВалюты", "копейка")
	.Записать();
	ЮТест.Контекст().УстановитьЗначение("Валюта", Валюта); 
	
	Организация = ЮТест.Данные().КонструкторОбъекта("Справочник.Организации")
	.ФикцияОбязательныхПолей()
	.Установить("ВалютныйУчет", Истина)
	.Записать(); 
	ЮТест.Контекст().УстановитьЗначение("Организация", Организация); 	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции


#КонецОбласти