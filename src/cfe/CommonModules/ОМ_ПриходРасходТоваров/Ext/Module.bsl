#Область СлужебныйПрограммныйИнтерфейс 

Процедура ИсполняемыеСценарии() Экспорт 
	
	ЮТТесты.ДобавитьТестовыйНабор("UNIT_Тестирование").ВТранзакции()
		.ДобавитьТест("ТестСозданиеДокументов", "Создание документов", "Позитив, Шкурин Игорь, Тест №1")  
		.ДобавитьТест("ТестПроведениеДокументов", "Проведение документов", "Позитив, Шкурин Игорь, Тест №1")
		.ДобавитьТест("ТестОстаткиТоварныхЗапасовПозитив", "Проверка остатков позитив", "Позитив, Шкурин Игорь, Тест №1") 
		.ДобавитьТест("ТестОстаткиТоварныхЗапасовНегатив", "Проверка остатков негатив", "Негатив, Шкурин Игорь, Тест №1")
		.ДобавитьТест("ТестОстаткиВзаиморасчетовПозитив", "Проверка взаиморасчетов позитив", "Позитив, Шкурин Игорь, Тест №1")
		.ДобавитьТест("ТестОстаткиВзаиморасчетовНегатив", "Проверка взаиморасчетов негатив", "Негатив, Шкурин Игорь, Тест №1")
		;
КонецПроцедуры     

Процедура ТестСозданиеДокументов() Экспорт   
	
	//1. подготовка параметров и генерация данных для выполнения функции
	ВернутьОбъект = Истина;  
	КонтрагентНаименование = "ООО Ромашка";
	Контрагент = СозданиеКонтрагента(КонтрагентНаименование);
	Склад = Справочники.Склады.НайтиПоКоду("000000001"); 
	Количество = 10;
	Сумма = 2500;
	ТоварНаименование = "Товар";
	Товар = СозданиеТовара(ТоварНаименование);  
	
	//2. выполнение функции
	ДокументыПрихода = СоздатьДокументыПрихода(Контрагент, Товар, Количество, Сумма).Записать(Истина);
	ДокументыРасхода = СоздатьДокументыРасхода(Контрагент, Товар, Количество, Сумма).Записать(Истина);
	
	//3. проверка результата
	ЮТест.ОжидаетЧто(ДокументыПрихода).Метод("Записать").НеВыбрасываетИсключение();		
	ЮТест.ОжидаетЧто(ДокументыРасхода).Метод("Записать").НеВыбрасываетИсключение();	
	
КонецПроцедуры  

Процедура ТестПроведениеДокументов() Экспорт     
	
	//1. подготовка параметров и генерация данных для выполнения функции
	ВернутьОбъект = Истина;
	Количество = 10;
	Сумма = 2500;
	КонтрагентНаименование = "ООО Ромашка";
	Контрагент = СозданиеКонтрагента(КонтрагентНаименование);
	Склад = Справочники.Склады.НайтиПоКоду("000000001"); 
	ТоварНаименование = "Товар";
	Товар = СозданиеТовара(ТоварНаименование);	
	
	//2. выполнение функции
	ДокументыПрихода = СоздатьДокументыПрихода(Контрагент, Товар, Количество, Сумма).Записать(Истина);
	ДокументыРасхода = СоздатьДокументыРасхода(Контрагент, Товар, Количество, Сумма).Записать(Истина); 
	
	//3. проверка результата
	ЮТест.ОжидаетЧто(ДокументыПрихода).Метод("Записать").Параметр(РежимЗаписиДокумента.Проведение).НеВыбрасываетИсключение();
	Движения = ЮТЗапросы.ДвиженияДокумента(ДокументыПрихода.Ссылка, "ТоварныеЗапасы");
	ЮТест.ОжидаетЧто(Движения.Количество()).Больше(0);	
	ЮТест.ОжидаетЧто(ДокументыРасхода).Метод("Записать").Параметр(РежимЗаписиДокумента.Проведение).НеВыбрасываетИсключение();
	Движения = ЮТЗапросы.ДвиженияДокумента(ДокументыРасхода.Ссылка, "ТоварныеЗапасы");
	ЮТест.ОжидаетЧто(Движения.Количество()).Больше(0);  	
	
КонецПроцедуры 

Процедура ТестОстаткиТоварныхЗапасовПозитив() Экспорт  
	
	//1. подготовка параметров и генерация данных для выполнения функции
	ВернутьОбъект = Истина;
	Количество = 10;
	Сумма = 2500;
	КонтрагентНаименование = "ООО Ромашка";
	Контрагент = СозданиеКонтрагента(КонтрагентНаименование);
	Склад = Справочники.Склады.НайтиПоКоду("000000001"); 
	ТоварНаименование = "Футбольный мяч";
	Товар = СозданиеТовара(ТоварНаименование); 
	
	//2. выполнение функции
	ДокументОбъект1 = СоздатьДокументыПрихода(Контрагент, Товар, Количество, Сумма).Провести();
	ДокументОбъект2 = СоздатьДокументыПрихода(Контрагент, Товар, Количество, Сумма).Провести();
	ДокументОбъект3 = СоздатьДокументыРасхода(Контрагент, Товар, Количество, Сумма).Провести();
	ДокументОбъект4 = СоздатьДокументыРасхода(Контрагент, Товар, Количество, Сумма).Провести();
	ОписаниеЗапроса = ЮТЗапросы.ОписаниеЗапроса();
	ОписаниеЗапроса.ИмяТаблицы = "РегистрНакопления.ТоварныеЗапасы.Остатки";
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("Склад");
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("Товар");
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("КоличествоОстаток");
	ОписаниеЗапроса.Условия.Добавить("Склад = &Склад");
	ОписаниеЗапроса.Условия.Добавить("Товар = &Товар");
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Склад", Склад);
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Товар", Товар);
	Результат = ЮТЗапросы.РезультатЗапроса(ОписаниеЗапроса);   
	
	//3. проверка результата
	ЮТест.ОжидаетЧто(Результат)
	.НеЗаполнено()
	;
		
КонецПроцедуры   

Процедура ТестОстаткиТоварныхЗапасовНегатив() Экспорт 
	
	//1. подготовка параметров и генерация данных для выполнения функции
	ВернутьОбъект = Истина;
	Количество = 10;
	Сумма = 2500;
	КонтрагентНаименование = "ООО Ромашка";
	Контрагент = СозданиеКонтрагента(КонтрагентНаименование);
	Склад = Справочники.Склады.НайтиПоКоду("000000001"); 
	ТоварНаименование = "Футбольный мяч";
	Товар = СозданиеТовара(ТоварНаименование);
	
	//2. выполнение функции
	ДокументОбъект1 = СоздатьДокументыПрихода(Контрагент, Товар, Количество, Сумма).Провести();
	ДокументОбъект2 = СоздатьДокументыПрихода(Контрагент, Товар, Количество, Сумма).Провести();
	ДокументОбъект3 = СоздатьДокументыРасхода(Контрагент, Товар, Количество, Сумма).Провести();
	ДокументОбъект4 = СоздатьДокументыРасхода(Контрагент, Товар, 20, Сумма).Провести();
	ОписаниеЗапроса = ЮТЗапросы.ОписаниеЗапроса();
	ОписаниеЗапроса.ИмяТаблицы = "РегистрНакопления.ТоварныеЗапасы.Остатки";
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("Склад");
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("Товар");
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("КоличествоОстаток");
	ОписаниеЗапроса.Условия.Добавить("Склад = &Склад");
	ОписаниеЗапроса.Условия.Добавить("Товар = &Товар");
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Склад", Склад);
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Товар", Товар);
	Результат = ЮТЗапросы.РезультатЗапроса(ОписаниеЗапроса); 
	
	//3. проверка результата
	ЮТест.ОжидаетЧто(Результат).Свойство("[0].КоличествоОстаток").НеРавно(0); 
	
КонецПроцедуры  

Процедура ТестОстаткиВзаиморасчетовПозитив() Экспорт 
	
	//1. подготовка параметров и генерация данных для выполнения функции
	ВернутьОбъект = Истина;
	Количество = 10;
	Сумма = 2500;    
	КонтрагентНаименование = "ООО Ромашка";
	Контрагент = СозданиеКонтрагента(КонтрагентНаименование);
	Валюта = Справочники.Валюты.НайтиПоКоду("000000001"); 
	ТоварНаименование = "Футбольный мяч";
	Товар = СозданиеТовара(ТоварНаименование);
	
	//2. выполнение функции
	ДокументОбъект1 = СоздатьДокументыПрихода(Контрагент, Товар, Количество, Сумма).Провести();
	ДокументОбъект2 = СоздатьДокументыПрихода(Контрагент, Товар, Количество, Сумма).Провести();
	ДокументОбъект3 = СоздатьДокументыРасхода(Контрагент, Товар, Количество, Сумма).Провести();
	ДокументОбъект4 = СоздатьДокументыРасхода(Контрагент, Товар, Количество, Сумма).Провести();
	ОписаниеЗапроса = ЮТЗапросы.ОписаниеЗапроса();
	ОписаниеЗапроса.ИмяТаблицы = "РегистрНакопления.Взаиморасчеты.Остатки";
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("Валюта");
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("Контрагент");
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("СуммаОстаток");
	ОписаниеЗапроса.Условия.Добавить("Валюта = &Валюта");
	ОписаниеЗапроса.Условия.Добавить("Контрагент = &Контрагент");
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Контрагент", Контрагент);
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Валюта", Валюта);
	Результат = ЮТЗапросы.РезультатЗапроса(ОписаниеЗапроса);
	
	//3. проверка результата
	ЮТест.ОжидаетЧто(Результат)
	.НеЗаполнено()
	;
		
КонецПроцедуры 

Процедура ТестОстаткиВзаиморасчетовНегатив() Экспорт 
	
	//1. подготовка параметров и генерация данных для выполнения функции
	ВернутьОбъект = Истина;
	Количество = 10;
	Сумма = 2500;
	КонтрагентНаименование = "ООО Ромашка";
	Контрагент = СозданиеКонтрагента(КонтрагентНаименование);
	Валюта = Справочники.Валюты.НайтиПоКоду("000000001"); 
	ТоварНаименование = "Футбольный мяч";
	Товар = СозданиеТовара(ТоварНаименование); 
	
	//2. выполнение функции
	ДокументОбъект1 = СоздатьДокументыПрихода(Контрагент, Товар, Количество, Сумма).Провести();
	ДокументОбъект2 = СоздатьДокументыПрихода(Контрагент, Товар, Количество, Сумма).Провести();
	ДокументОбъект3 = СоздатьДокументыРасхода(Контрагент, Товар, Количество, Сумма).Провести();
	ДокументОбъект4 = СоздатьДокументыРасхода(Контрагент, Товар, Количество, 10000).Провести();
	ОписаниеЗапроса = ЮТЗапросы.ОписаниеЗапроса();
	ОписаниеЗапроса.ИмяТаблицы = "РегистрНакопления.Взаиморасчеты.Остатки";
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("Валюта");
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("Контрагент");
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("СуммаОстаток");
	ОписаниеЗапроса.Условия.Добавить("Валюта = &Валюта");
	ОписаниеЗапроса.Условия.Добавить("Контрагент = &Контрагент");
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Валюта", Валюта);
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Контрагент", Контрагент);
	Результат = ЮТЗапросы.РезультатЗапроса(ОписаниеЗапроса); 
	
	//3. проверка результата
	ЮТест.ОжидаетЧто(Результат).Свойство("[0].СуммаОстаток").НеРавно(0); 
	
КонецПроцедуры
	
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции 

Функция СоздатьДокументыПрихода(Контрагент, Товар, Количество, Сумма) Экспорт  
	
	Склад = Справочники.Склады.НайтиПоКоду("000000001");
	Валюта = Справочники.Валюты.НайтиПоКоду("000000001");

	Конструктор = ЮТест.Данные().КонструкторОбъекта("Документ.ПриходТовара")
		.ФикцияОбязательныхПолей()
		.Установить("Поставщик", Контрагент)
		.Установить("Склад", Склад)
		.Установить("Валюта", Валюта)
		.ТабличнаяЧасть("товары")
			.ДобавитьСтроку()
				.ФикцияОбязательныхПолей()
				.Установить("Товар", Товар)
				.Установить("Количество", Количество)
				.Установить("Сумма", Сумма);
 
	Возврат Конструктор;
	
КонецФункции // ()    

Функция СоздатьДокументыРасхода(Контрагент, Товар, Количество, Сумма)
	
	Склад = Справочники.Склады.НайтиПоКоду("000000001");
	Валюта = Справочники.Валюты.НайтиПоКоду("000000001");
	Конструктор = ЮТест.Данные().КонструкторОбъекта("Документ.РасходТовара")
		.ФикцияОбязательныхПолей()
		.Установить("Покупатель", Контрагент)
		.Установить("Склад", Склад)
		.Установить("Валюта", Валюта)
		.ТабличнаяЧасть("товары")
			.ДобавитьСтроку()
				.ФикцияОбязательныхПолей()
				.Установить("Товар", Товар)
				.Установить("Количество", Количество)
				.Установить("Сумма", Сумма);
	Возврат Конструктор;
	
КонецФункции // ()  

Функция СозданиеТовара(ТоварНаименование) Экспорт 
	
	Товар = ЮТест.Данные().КонструкторОбъекта("Справочники.Товары")
		.ФикцияОбязательныхПолей()
		.Установить("Наименование", ТоварНаименование)
		.Записать()
		;
	Возврат Товар;    
	
КонецФункции // () 

Функция СозданиеКонтрагента(НаименованиеКонтрагента) Экспорт   
	
	Контрагент = ЮТест.Данные().КонструкторОбъекта("Справочники.Контрагенты")
		.ФикцияОбязательныхПолей()
		.Установить("Наименование", НаименованиеКонтрагента)
		.Записать()
		;
	Возврат Контрагент;    
	
КонецФункции 
	
#КонецОбласти